
format:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    rsp,0x8
    1008:	48 8b 05 d9 2f 00 00 	mov    rax,QWORD PTR [rip+0x2fd9]        # 3fe8 <__gmon_start__>
    100f:	48 85 c0             	test   rax,rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   rax
    1016:	48 83 c4 08          	add    rsp,0x8
    101a:	c3                   	ret    

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 82 2f 00 00    	push   QWORD PTR [rip+0x2f82]        # 3fa8 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 83 2f 00 00 	bnd jmp QWORD PTR [rip+0x2f83]        # 3fb0 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nop    DWORD PTR [rax]
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	push   0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmp 1020 <.plt>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	push   0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmp 1020 <.plt>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	push   0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmp 1020 <.plt>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	push   0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmp 1020 <.plt>
    106f:	90                   	nop

Disassembly of section .plt.got:

0000000000001070 <__cxa_finalize@plt>:
    1070:	f3 0f 1e fa          	endbr64 
    1074:	f2 ff 25 7d 2f 00 00 	bnd jmp QWORD PTR [rip+0x2f7d]        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    107b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .plt.sec:

0000000000001080 <__stack_chk_fail@plt>:
    1080:	f3 0f 1e fa          	endbr64 
    1084:	f2 ff 25 2d 2f 00 00 	bnd jmp QWORD PTR [rip+0x2f2d]        # 3fb8 <__stack_chk_fail@GLIBC_2.4>
    108b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001090 <printf@plt>:
    1090:	f3 0f 1e fa          	endbr64 
    1094:	f2 ff 25 25 2f 00 00 	bnd jmp QWORD PTR [rip+0x2f25]        # 3fc0 <printf@GLIBC_2.2.5>
    109b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000010a0 <fgets@plt>:
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	f2 ff 25 1d 2f 00 00 	bnd jmp QWORD PTR [rip+0x2f1d]        # 3fc8 <fgets@GLIBC_2.2.5>
    10ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000010b0 <setvbuf@plt>:
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	f2 ff 25 15 2f 00 00 	bnd jmp QWORD PTR [rip+0x2f15]        # 3fd0 <setvbuf@GLIBC_2.2.5>
    10bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

00000000000010c0 <_start>:
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	31 ed                	xor    ebp,ebp
    10c6:	49 89 d1             	mov    r9,rdx
    10c9:	5e                   	pop    rsi
    10ca:	48 89 e2             	mov    rdx,rsp
    10cd:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
    10d1:	50                   	push   rax
    10d2:	54                   	push   rsp
    10d3:	4c 8d 05 66 02 00 00 	lea    r8,[rip+0x266]        # 1340 <__libc_csu_fini>
    10da:	48 8d 0d ef 01 00 00 	lea    rcx,[rip+0x1ef]        # 12d0 <__libc_csu_init>
    10e1:	48 8d 3d 9c 01 00 00 	lea    rdi,[rip+0x19c]        # 1284 <main>
    10e8:	ff 15 f2 2e 00 00    	call   QWORD PTR [rip+0x2ef2]        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    10ee:	f4                   	hlt    
    10ef:	90                   	nop

00000000000010f0 <deregister_tm_clones>:
    10f0:	48 8d 3d 19 2f 00 00 	lea    rdi,[rip+0x2f19]        # 4010 <__TMC_END__>
    10f7:	48 8d 05 12 2f 00 00 	lea    rax,[rip+0x2f12]        # 4010 <__TMC_END__>
    10fe:	48 39 f8             	cmp    rax,rdi
    1101:	74 15                	je     1118 <deregister_tm_clones+0x28>
    1103:	48 8b 05 ce 2e 00 00 	mov    rax,QWORD PTR [rip+0x2ece]        # 3fd8 <_ITM_deregisterTMCloneTable>
    110a:	48 85 c0             	test   rax,rax
    110d:	74 09                	je     1118 <deregister_tm_clones+0x28>
    110f:	ff e0                	jmp    rax
    1111:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    1118:	c3                   	ret    
    1119:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000001120 <register_tm_clones>:
    1120:	48 8d 3d e9 2e 00 00 	lea    rdi,[rip+0x2ee9]        # 4010 <__TMC_END__>
    1127:	48 8d 35 e2 2e 00 00 	lea    rsi,[rip+0x2ee2]        # 4010 <__TMC_END__>
    112e:	48 29 fe             	sub    rsi,rdi
    1131:	48 89 f0             	mov    rax,rsi
    1134:	48 c1 ee 3f          	shr    rsi,0x3f
    1138:	48 c1 f8 03          	sar    rax,0x3
    113c:	48 01 c6             	add    rsi,rax
    113f:	48 d1 fe             	sar    rsi,1
    1142:	74 14                	je     1158 <register_tm_clones+0x38>
    1144:	48 8b 05 a5 2e 00 00 	mov    rax,QWORD PTR [rip+0x2ea5]        # 3ff0 <_ITM_registerTMCloneTable>
    114b:	48 85 c0             	test   rax,rax
    114e:	74 08                	je     1158 <register_tm_clones+0x38>
    1150:	ff e0                	jmp    rax
    1152:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    1158:	c3                   	ret    
    1159:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000001160 <__do_global_dtors_aux>:
    1160:	f3 0f 1e fa          	endbr64 
    1164:	80 3d dd 2e 00 00 00 	cmp    BYTE PTR [rip+0x2edd],0x0        # 4048 <completed.8059>
    116b:	75 2b                	jne    1198 <__do_global_dtors_aux+0x38>
    116d:	55                   	push   rbp
    116e:	48 83 3d 82 2e 00 00 	cmp    QWORD PTR [rip+0x2e82],0x0        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1175:	00 
    1176:	48 89 e5             	mov    rbp,rsp
    1179:	74 0c                	je     1187 <__do_global_dtors_aux+0x27>
    117b:	48 8b 3d 86 2e 00 00 	mov    rdi,QWORD PTR [rip+0x2e86]        # 4008 <__dso_handle>
    1182:	e8 e9 fe ff ff       	call   1070 <__cxa_finalize@plt>
    1187:	e8 64 ff ff ff       	call   10f0 <deregister_tm_clones>
    118c:	c6 05 b5 2e 00 00 01 	mov    BYTE PTR [rip+0x2eb5],0x1        # 4048 <completed.8059>
    1193:	5d                   	pop    rbp
    1194:	c3                   	ret    
    1195:	0f 1f 00             	nop    DWORD PTR [rax]
    1198:	c3                   	ret    
    1199:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000011a0 <frame_dummy>:
    11a0:	f3 0f 1e fa          	endbr64 
    11a4:	e9 77 ff ff ff       	jmp    1120 <register_tm_clones>

00000000000011a9 <echo>:
    11a9:	f3 0f 1e fa          	endbr64 
    11ad:	55                   	push   rbp
    11ae:	48 89 e5             	mov    rbp,rsp
    11b1:	48 81 ec 10 01 00 00 	sub    rsp,0x110
    11b8:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    11bf:	00 00 
    11c1:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    11c5:	31 c0                	xor    eax,eax
    11c7:	48 8b 15 62 2e 00 00 	mov    rdx,QWORD PTR [rip+0x2e62]        # 4030 <stdin@@GLIBC_2.2.5>
    11ce:	48 8d 85 f0 fe ff ff 	lea    rax,[rbp-0x110]
    11d5:	be 00 01 00 00       	mov    esi,0x100
    11da:	48 89 c7             	mov    rdi,rax
    11dd:	e8 be fe ff ff       	call   10a0 <fgets@plt>
    11e2:	48 8d 85 f0 fe ff ff 	lea    rax,[rbp-0x110]
    11e9:	48 89 c7             	mov    rdi,rax
    11ec:	b8 00 00 00 00       	mov    eax,0x0
    11f1:	e8 9a fe ff ff       	call   1090 <printf@plt>
    11f6:	eb cf                	jmp    11c7 <echo+0x1e>

00000000000011f8 <init>:
    11f8:	f3 0f 1e fa          	endbr64 
    11fc:	55                   	push   rbp
    11fd:	48 89 e5             	mov    rbp,rsp
    1200:	48 83 ec 10          	sub    rsp,0x10
    1204:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    120b:	00 00 
    120d:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    1211:	31 c0                	xor    eax,eax
    1213:	48 8b 05 16 2e 00 00 	mov    rax,QWORD PTR [rip+0x2e16]        # 4030 <stdin@@GLIBC_2.2.5>
    121a:	b9 00 00 00 00       	mov    ecx,0x0
    121f:	ba 02 00 00 00       	mov    edx,0x2
    1224:	be 00 00 00 00       	mov    esi,0x0
    1229:	48 89 c7             	mov    rdi,rax
    122c:	e8 7f fe ff ff       	call   10b0 <setvbuf@plt>
    1231:	48 8b 05 e8 2d 00 00 	mov    rax,QWORD PTR [rip+0x2de8]        # 4020 <stdout@@GLIBC_2.2.5>
    1238:	b9 00 00 00 00       	mov    ecx,0x0
    123d:	ba 02 00 00 00       	mov    edx,0x2
    1242:	be 00 00 00 00       	mov    esi,0x0
    1247:	48 89 c7             	mov    rdi,rax
    124a:	e8 61 fe ff ff       	call   10b0 <setvbuf@plt>
    124f:	48 8b 05 ea 2d 00 00 	mov    rax,QWORD PTR [rip+0x2dea]        # 4040 <stderr@@GLIBC_2.2.5>
    1256:	b9 00 00 00 00       	mov    ecx,0x0
    125b:	ba 02 00 00 00       	mov    edx,0x2
    1260:	be 00 00 00 00       	mov    esi,0x0
    1265:	48 89 c7             	mov    rdi,rax
    1268:	e8 43 fe ff ff       	call   10b0 <setvbuf@plt>
    126d:	90                   	nop
    126e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    1272:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    1279:	00 00 
    127b:	74 05                	je     1282 <init+0x8a>
    127d:	e8 fe fd ff ff       	call   1080 <__stack_chk_fail@plt>
    1282:	c9                   	leave  
    1283:	c3                   	ret    

0000000000001284 <main>:
    1284:	f3 0f 1e fa          	endbr64 
    1288:	55                   	push   rbp
    1289:	48 89 e5             	mov    rbp,rsp
    128c:	48 83 ec 10          	sub    rsp,0x10
    1290:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    1297:	00 00 
    1299:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    129d:	31 c0                	xor    eax,eax
    129f:	b8 00 00 00 00       	mov    eax,0x0
    12a4:	e8 4f ff ff ff       	call   11f8 <init>
    12a9:	b8 00 00 00 00       	mov    eax,0x0
    12ae:	e8 f6 fe ff ff       	call   11a9 <echo>
    12b3:	b8 00 00 00 00       	mov    eax,0x0
    12b8:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    12bc:	64 48 33 14 25 28 00 	xor    rdx,QWORD PTR fs:0x28
    12c3:	00 00 
    12c5:	74 05                	je     12cc <main+0x48>
    12c7:	e8 b4 fd ff ff       	call   1080 <__stack_chk_fail@plt>
    12cc:	c9                   	leave  
    12cd:	c3                   	ret    
    12ce:	66 90                	xchg   ax,ax

00000000000012d0 <__libc_csu_init>:
    12d0:	f3 0f 1e fa          	endbr64 
    12d4:	41 57                	push   r15
    12d6:	4c 8d 3d c3 2a 00 00 	lea    r15,[rip+0x2ac3]        # 3da0 <__frame_dummy_init_array_entry>
    12dd:	41 56                	push   r14
    12df:	49 89 d6             	mov    r14,rdx
    12e2:	41 55                	push   r13
    12e4:	49 89 f5             	mov    r13,rsi
    12e7:	41 54                	push   r12
    12e9:	41 89 fc             	mov    r12d,edi
    12ec:	55                   	push   rbp
    12ed:	48 8d 2d b4 2a 00 00 	lea    rbp,[rip+0x2ab4]        # 3da8 <__do_global_dtors_aux_fini_array_entry>
    12f4:	53                   	push   rbx
    12f5:	4c 29 fd             	sub    rbp,r15
    12f8:	48 83 ec 08          	sub    rsp,0x8
    12fc:	e8 ff fc ff ff       	call   1000 <_init>
    1301:	48 c1 fd 03          	sar    rbp,0x3
    1305:	74 1f                	je     1326 <__libc_csu_init+0x56>
    1307:	31 db                	xor    ebx,ebx
    1309:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    1310:	4c 89 f2             	mov    rdx,r14
    1313:	4c 89 ee             	mov    rsi,r13
    1316:	44 89 e7             	mov    edi,r12d
    1319:	41 ff 14 df          	call   QWORD PTR [r15+rbx*8]
    131d:	48 83 c3 01          	add    rbx,0x1
    1321:	48 39 dd             	cmp    rbp,rbx
    1324:	75 ea                	jne    1310 <__libc_csu_init+0x40>
    1326:	48 83 c4 08          	add    rsp,0x8
    132a:	5b                   	pop    rbx
    132b:	5d                   	pop    rbp
    132c:	41 5c                	pop    r12
    132e:	41 5d                	pop    r13
    1330:	41 5e                	pop    r14
    1332:	41 5f                	pop    r15
    1334:	c3                   	ret    
    1335:	66 66 2e 0f 1f 84 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    133c:	00 00 00 00 

0000000000001340 <__libc_csu_fini>:
    1340:	f3 0f 1e fa          	endbr64 
    1344:	c3                   	ret    

Disassembly of section .fini:

0000000000001348 <_fini>:
    1348:	f3 0f 1e fa          	endbr64 
    134c:	48 83 ec 08          	sub    rsp,0x8
    1350:	48 83 c4 08          	add    rsp,0x8
    1354:	c3                   	ret    
